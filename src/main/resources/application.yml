spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/project?serverTimezone=Asia/Shanghai
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:BDS}
  profiles:
#    配置开发环境
    active: dev
  session:
#    会话超时时间，单位秒，决定session的有效时间
    timeout: 86400
#    缓存在redis中
    store-type: redis

  redis:
    port: ${REDIS_PORT:6379}
    host: ${REDIS_HOST:localhost}
    database: 0

server:
  port: 8080
  servlet:
    context-path: /api
    session:
      cookie:
#        设置cookie的域名。表示cookie只在这个域名下有效
        domain: localhost


mybatis-plus:
  global-config:
    db-config:
#      逻辑删除字段名。这里指定了在数据库表中用于标识记录是否被逻辑删除的字段名称为flag
      logic-delete-field: flag
#      逻辑删除值。这里指定了当数据库表中的flag字段值为1时，表示该记录被逻辑删除。
      logic-delete-value: 1
#      未逻辑删除值。这里指定了当数据库表中的flag字段值为0时，表示该记录未被逻辑删除。
      logic-not-delete-value: 0
  configuration:
#    是否开启驼峰命名自动转换。这里设置为false，表示不自动将数据库字段的下划线命名转换为Java字段的驼峰命名。
    map-underscore-to-camel-case: false
#    sql语句打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#    禁用缓存
    local-cache-scope: statement

  # 设置日志打印
  # logging.level.root: 日志级别
  # logging.pattern.console: 日志输出格式
  # %m为消息
  # %n为换行
  # %p 级别
  # %t 为线程名 %16t 则线程名占16位
  # %clr 是添加颜色
  # 例如 %clr（%m） 则日志消息带有颜色
# logging.file.name: 记录日志到文件
# logging.file.logback.rollingpolicy.max-file-size: 日志文件大小
# logging.file.logback.rollingpolicy.file-name-pattern: 超过最大后，重新创建日志文件名称

#logging:
#  level:
#    root: error
#  pattern:
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#  file:
#    name: "D:\\project\\friends\\friends-backend\\springbootSlf4j\\server.log"
#  logback:
#    rollingpolicy:
#      max-file-size: "10MB"
#      file-name-pattern: "D:\\project\\friends\\friends-backend\\springbootSlf4j\\server.%d{yyyy-MM-dd}.%i.log"

knife4j:
  enable: true
# 开启生产环境屏蔽
#  production: true
  openapi:
    title: "伙伴匹配系统"
    description: "伙伴匹配系统后端接口文档"
    email: 969900860@qq.com
    concat: BDS
    url: https://github.com/bai-xiaosheng
    version: v1.0
    license: Apache 2.0
    license-url: https://stackoverflow.com/
    terms-of-service-url: https://stackoverflow.com/
    group:
      test1:
        group-name: 用户接口
        api-rule: package
        api-rule-resources:
#         这里指定Controller扫描包路径
          - com.example.friendsbackend.controller



#        //分组名称
#        .groupName("2.X版本")
#        .select()
#        .apis(RequestHandlerSelectors.basePackage("com.github.xiaoymin.knife4j.controller"))
#        .paths(PathSelectors.any())
#        .build();





